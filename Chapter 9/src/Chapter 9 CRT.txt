1. The third value of an array is index 2.

2. int[] quantities = new int[20];

3. Double[] heights = new Double[3];
   heights[0] = 1.65;
   heights[1] = 2.15;
   heights[2] = 4.95;

4. Double[] grades = new Double[num];

   for(int i = 0; i < num; i++)
   {
	System.out.println(grades[i]);
   }

5. a) 	(Test.java in Chapter 9/src)

	System.out.println("Enter 'i' to insert a number into the array or any other key to quit.");
	choice = input.next();
		
	while (choice.equals("i"))
	{
			while(counter != constant)
			{
				grades[constant - counter] = grades[(constant - counter) - 1];
				counter++;
			}
			counter = 0;
				
			grades[0] = (double) Math.round((Math.random() * 50 + 1));
				
			System.out.println(Arrays.toString(grades));
			System.out.println("Enter 'i' to insert a number into the array or any other key to quit.");
			choice = input.next();
	}

    b) (Test2.java in Chapter 9/src)

	System.out.println("Enter 'i' to delete a number from the array or any other key to quit.");
	choice = input.next();
		
		while (choice.equals("i"))
		{
				while(counter != constant)
				{
					grades[counter] = grades[counter + 1];
					counter++;
					if(counter == constant)
					{
						grades[counter] = null;
					}
				}
				counter = 0;
				
				System.out.println(Arrays.toString(grades));
				System.out.println("Enter 'i' to delete a number from the array or any other key to quit.");
				choice = input.next();
		}
		input.close();
	}

6. Passing an entire array to a method requires an array declaration in the method (int[], String[], double[]), whereas passing a single element only requires 
the varible declaration(int, string, double).

7. Offset array indexes are required if the range of the data in the array is out of bounds for the length of the array, and allows you to troubleshoot why 
this issue is occurring.

8. The output displayed by the code is "i".
		

